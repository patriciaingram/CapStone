Step Two is all about fleshing out your project idea. For this step, please write a proposal based on the project idea you agreed on with your mentor. This proposal should be a 1-2 page document that answers the following questions: 

1. What tech stack will you use for your final project? We recommend that you use React and Node for this project, however if you are extremely interested in becoming a Python developer you are welcome to use Python/Flask for this project. 
I plan to use React for the front-end and Node.js for the back-end. This will provide a robust and scalable foundation for building a web application with dynamic user interfaces and server-side functionality.

2. Is the front-end UI or the back-end going to be the focus of your project? Or are you going to make an evenly focused full-stack application? 
I intend to create an evenly focused full-stack application. Both the front-end UI and the back-end functionality will be important for providing a seamless user experience and accessing and managing data.

3. Will this be a website? A mobile app? Something else? 
My project will be a website accessible through web browsers. This choice allows for broad accessibility and compatibility across devices.

4. What goal will your project be designed to achieve? 
The primary goal of my project is to help new pet owners access free resources for caring for their pets. This includes providing information about various animals, their diets, and habitats, as well as useful links to resources and adoption centers.

5. What kind of users will visit your app? In other words, what is the demographic of your users? 
My target users are pet owners, especially those who prefer DIY solutions or may not be able to afford professional services. This demographic values accessibility, affordability, and comprehensive information.

6. What data do you plan on using? How are you planning on collecting your data? You may have not picked your actual API yet, which is fine, just outline what kind of data you would like it to contain. You are welcome to create your own API and populate it with data. If you are using a Python/Flask stack are required to create your own API. 
I plan to use data from APIs such as Petfinder's API (https://www.petfinder.com/developers/), which provides information about different animals, adoption centers, and resources for pet care. Additionally, you may consider creating your own API to populate with data related to animal facts, care guides, and useful links.
https://thedogapi.com/ : Provides a variety of data about dog breeds, including images, breed information, and random dog images.
https://thecatapi.com/ : Similar to TheDogAPI but focused on cat breeds. Provides images, breed information, and random cat images.
https://opencagedata.com/ : Allows for converting addresses into geographic coordinates (latitude and longitude) and vice versa. This could be useful for mapping adoption centers or displaying locations of pet-related services. 
https://catfact.ninja/ : Provides random facts about cats.
https://thedogapi.com/ : Offers random pictures of dogs, information about dog breeds, and images of specific breeds. 
: Provides information and images of various farm animals, including cows, pigs, chickens, and more.
https://endangeredanimals.docs.apiary.io/#reference/0/all-animals : offers information about endangered species.
https://api-ninjas.com/api/animals : provides interesting scientific facts on thousands of different animal species.

7. In brief, outline your approach to creating your project (knowing that you may not know everything in advance and that these details might change later). Answer questions like the ones below, but feel free to add more information: 
a. What does your database schema look like? 
I'll design a database schema to store information about animals, adoption centers, and resources.
b. What kinds of issues might you run into with your API? This is especially important if you are creating your own API, web scraping produces notoriously messy data. 
I anticipate potential challenges with API integration, such as handling inconsistent data formats or rate limiting.
c. Is there any sensitive information you need to secure? 
I'll ensure sensitive user information, if any, is securely stored and transmitted.
d. What functionality will your app include? 
My app will include features such as browsing animals, viewing care information, accessing resources, and finding adoption centers.
e. What will the user flow look like? 
The user flow will involve navigating through animal categories, viewing detailed information, and accessing external resources.
f. What features make your site more than a CRUD app? What are your stretch goals? 
Beyond basic CRUD operations, my site will provide value-added features such as dynamic content updates, interactive elements (e.g., quizzes or forums), user authentication, and personalized recommendations. Other goals may include community features, and integration with social media platforms.
